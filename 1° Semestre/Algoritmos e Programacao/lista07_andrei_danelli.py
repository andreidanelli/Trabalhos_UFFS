# -*- coding: utf-8 -*-
"""lista07_Andrei_Danelli.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D3xCSRjbiZNom6Emx5txPm_Rp9TX1fwV

# Lista 7 - 

```
**Devem ser usadas funções em todas as questões**
```

---
**1 -** Faça um programa que leia um valor `N` e chame uma **função** para calcular e retornar o valor da série `S`, utilizando a seguinte fórmula:

&nbsp; 

![](https://drive.google.com/uc?export=view&id=1wJS6mG8BsgEml1roWy2nLQcLdMNKP8LO)
 

&nbsp; 

Ex:
* entrada: 20
* saída: 0.33122859682457195
"""

def CalcularSerie(n):
  calc = 0.0

  for i in range(2,n+1):
    if (i % 2 == 0):
      calc += (1/i)
    else:
      calc -= (1/i)

  return print('\nResultado:',calc)

n = int(input('Insira um número: '))

CalcularSerie(n)

"""---
**2 -** Faça uma **função** que recebe uma string e retorna o número de vogais existentes nesta string. No programa principal, leia uma string através do input, chame a função e exiba a contagem de vogais.

Dicas: 
* uma string pode ser tratada como uma lista (vetor) de letras;
* o conjunto de vogais também pode ser definido como uma lista (vetor).

Ex:
* entrada: Universidade
* saída:  6 vogais
"""

def contarVogais(palavra):
    vogais = "aeiou"
    totalVogal = 0

    for letra in palavra:
        if letra in vogais:
            totalVogal += 1

    return totalVogal

palavra = input('Insira uma palavra: ')
print('Total vogais: ', contarVogais(palavra))

"""---
**3 -** Faça um programa para cálculo de área de figuras geométricas. Ao iniciar, o programa deve oferecer ao usuário a opção de escolher entre: círculo (c), triângulo (t) e retângulo (r). Cada opção deve conduzir o usuário à digitação dos valores necessários ao cálculo e, em seguida, chamar a **função** correspondente ao cálculo da área da figura escolhida. As 3 **funções** devem retornar os resultados ao programa principal para que sejam exibidos.

Ex:
* entrada: t 10 5
* saída: 25

"""

'''função calc. área círculo'''
def calcularareacirculo(raio):
  soma = (3.14 * raio)
  print(f'Valor da área do Círculo: {soma:.2f}')  
  
'''Função calc. área triangulo'''
def calcularareatriangulo(base, altura):
  mult = (base * altura)
  soma = (mult / 2)
  print(f'Valor da área do Triângulo: {soma:.2f}')

'''funcão calc. área retângulo'''
def calculararearetangulo(base, altura):
  soma = (base * altura)
  print(f'Valor da área do Retângulo: {soma:.2f}')

figura = input('Escolha a figura que deseja calcular a área: \nCírculo(c), Triângulo(t), Retângulo(r):')

if figura == 'c' or  figura == 'C':
  raio = float(input('Digite o tamanho do raio: '))
  calcularareacirculo(raio)
elif figura == 't' or  figura == 'T':
  base = float(input('Digite o valor da base: '))
  altura = float(input('Digite o tamanho da altura: '))
  calcularareatriangulo(base, altura)
elif figura == 'r' or figura == 'R':
  base = float(input('Digite o valor da base: '))
  altura = float(input('Digite o tamanho da altura: '))
  calculararearetangulo(base, altura)
else:
  print('Figura informada inválida!')

"""**4** - Faça um programa que leia um vetor de 10 elementos. Em seguida chame uma função que recebe este vetor como argumento de entrada e retorna para o programa principal outro vetor contendo apenas os valores que se repetem, apresentados em ordem crescente. Exiba então este vetor no programa principal.

Ex:
* entrada: [9,3,3,5,7,9,0,2,4,2]
* saída: [2,3,9]
"""

def ValoresRepetidos(list):
  list2 = []
  i = 0
  j = 0
  while (i < len(list)):
    j = i+1
    valor = list[i]
    while j < len(list):
      if valor == list[j]:
        list2.append(list[j])
      j += 1
    i += 1
  print(f'\nOs valores repetidos são: {list2}')

list = []

for i in range(0,10):
  list.append(int(input(f'Digite o {i+1}° valor da lista: ')))

ValoresRepetidos(list)

"""def ---
**5 -** Faça um programa para cálculo de bonificações/descontos sobre o salário dos funcionários de uma empresa. O programa deve ler 4 valores (salário líquido, total de vendas no mês, faltas, adiantamentos) e armazená-los em uma lista (vetor). Em seguida, chamar uma função, passando este vetor como parâmetro. A função deve calcular e retornar o salário final de acordo com as seguintes regras:
  * aplicar um  bônus sobre o salário líquido equivalente a 3% do total de vendas, se este estiver abaixo de 20 mil, ou 5%, se alcançar ou ultrapassar este valor;
  * descontar 1/30 do salário líquido para cada dia de falta;
  * descontar o valor dado como adiantamento.

O programa principal deve solicitar a digitação dos 4 valores, chamar a função e apresentar o salário final. Em seguida, perguntar "deseja continuar? s/n". Encerrar o programa se o usuário escolher "n". Caso contrário, prosseguir solicitando os dados do próximo funcionário. 

Ex:
* entrada: 3000, 25000, 2, 500
* saída: 3550.0
"""

def CalcularSalario(list):
  Vlr_Ganho_Dia = 0
  Vlr_Bonus = 0
  soma = 0
  Desconto_Falta_Dias = 0
  list = []
  1
  for i in range(1):
    list.append(float(input('\nSalário Líquido R$: ')))
    list.append(float(input('Total de vendas no mês R$: ')))
    list.append(int(input('Total de faltas ao trabalho: ')))
    list.append(float(input('Valor adiantamento R$: ')))

  if (list[1] > 20000):
    Vlr_Bonus = (list[1] * 0.05)
  else:
    Vlr_Bonus = (list[1] * 0.03)

  soma = (list[0] + Vlr_Bonus)
  Vlr_Ganho_Dia = (list[0] / 30)
  Desconto_Falta_Dias = (list[2] * Vlr_Ganho_Dia)
  Atualizacao_Salarial = (soma - list[3]) - Desconto_Falta_Dias

  print(f'\nValor ganho por dia trabalhado R$: {Vlr_Ganho_Dia:.2f}')
  print(f'Valor bônus sobre total de vendas R$: {Vlr_Bonus:.2f}')
  print(f'Valor a receber R$: {Atualizacao_Salarial:.2f}')

print('Programa iniciado - BEM-VINDO(a)!!!\n')
CalcularSalario(list)

continuar = 's'
while continuar == 's':
  continuar = input('\nDeseja continuar (s/n) ? ')
  if continuar == 'n':
    print('\nO programa esta sendo finalizado!!')
    break
  CalcularSalario(list)

"""---
**DESAFIO -** Um palíndromo é uma palavra, frase ou número que é idêntico quando lido de frente para trás ou de trás para frente. São exemplos de palavras palíndromas: "arara", "osso", "mirim", "radar", "reviver", "socos", "saias".

Faça uma **função** que receba uma palavra e retorne verdadeiro se esta é um palíndromo, ou falso, caso contrário.

Ex:
* entrada: arara
* saída: True

* entrada: tucano
* saída: False
"""